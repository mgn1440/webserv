# All Settings have to exist in the server block(scope)
# First server is the default server(port has to be same)
# All directives are seperated into whitespaces except cr, lf
# Default root page is / if there is no root directive
# listen and server_name directive should be only once
# server, location, has scope
# listen directives can't be exist in the location block
# It is mandatory that all of directives(which isn't a block) have to get a semi colon
# Directs : listen server_name error_page client_max_body_size rewrite root autoindex index limit_except
# Scope : server location
# Each line has only one directive

server {		# Define the server block
	listen 80;	# Choose the port and host of each server
	# listen 443 ssl; # ERROR


	# Setup the server_names or not (optional)
	server_name example.com www.example.com;

	# Set default error pages
	error_page 404 /404.html;
	error_page 500 502 503
	504 /50x.html;

	# Limit client size: start line, header, body KMG
	client_max_size 100 10M inf;

	# Setup routes with one or multiple of the following rules(routes won't be using regex)
	location / {
		# Define accepted HTTP methods for  the route: deny all execpt GET POST
		limit_except GET POST;

		# Define HTTP redirection
		# https://www.nextree.co.kr/p4327/
		# rewrite regex URL [flag];
		# rewrite ^/redirect-url$ /new-url permanent;

		# Define a directory or a file from where the file should be searched
		root /path/to/root;

		# Turn on or off directory listing
		autoindex on;

		# Set a default file to answer if the request is a directory
		index index.html;

		cgi .php /usr/bin/php
		# Execute CGI based on certain file extension
		location ~ \.php$ {
			fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			include fastcgi_params;
		}

		# Make it work with POST and GET methods
		# if ($request_method !~ ^(GET|POST)$ ) {
		# 	return 405;
		# }

		location /cgi-bin {
			location
		}

		# Accept uploaded files and configure where they should be saved
		location /upload {
			client_body_temp_path /path/to/temp;
			client_body_in_file_only on;
			client_body_buffer_size 128K;
			client_max_body_size 10M;
			proxy_pass_request_headers on;
			proxy_set_header X-Original-URI $request_uri;
			proxy_set_body off;
			proxy_pass http://backend;
		}
	}
}

location /upload
{
	upload_path /my_path;
	cgi_path    /cgi-bin/php8.cgi;
}
# sunko.com/cgi-bin/index.php
location  ~ \.php$ {
	cgi_path /cgi-bin/php8.cgi;
}
